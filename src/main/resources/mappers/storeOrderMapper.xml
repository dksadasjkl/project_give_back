<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.give.repository.StoreOrderMapper">

    <resultMap id="StoreOrderMap" type="com.project.give.entity.StoreOrder">
        <id property="orderId" column="order_id"/>
        <result property="userId" column="user_id"/>
        <result property="productId" column="product_id"/>
        <result property="quantity" column="quantity"/>
        <result property="totalAmount" column="total_amount"/>
        <result property="orderStatus" column="order_status"/>
        <result property="orderDate" column="order_date"/>

        <!-- 상품 정보 -->
        <result property="productName" column="product_name"/>
        <result property="productImageUrl" column="product_image_url"/>

        <!-- 결제 정보 -->
        <result property="paymentMethod" column="payment_method"/>
        <result property="paymentStatus" column="payment_status"/>
        <result property="paymentAmount" column="payment_amount"/>

        <!-- 배송 정보 -->
        <result property="recipientName" column="recipient_name"/>
        <result property="address" column="address"/>
        <result property="shippingCarrier" column="shipping_carrier"/>
        <result property="trackingNumber" column="tracking_number"/>
        <result property="shippingStatus" column="shipping_status"/>
    </resultMap>

    <!--  주문 등록 -->
    <insert id="insertOrder" parameterType="com.project.give.entity.StoreOrder" useGeneratedKeys="true" keyProperty="orderId">
        INSERT INTO store_order_tb
        VALUES (0, #{userId}, #{productId}, #{quantity}, #{totalAmount}, #{orderStatus}, NOW())
    </insert>

    <!--  유저별 주문 목록 -->
    <select id="selectOrdersByUser" resultMap="StoreOrderMap">
        SELECT
        so.*,
        sp.product_name,
        sp.product_image_url,
        pay.payment_method,
        pay.payment_status,
        pay.amount AS payment_amount,
        ship.recipient_name,
        ship.address,
        ship.shipping_carrier,
        ship.tracking_number,
        ship.shipping_status
        FROM store_order_tb so
        JOIN store_product_tb sp ON so.product_id = sp.product_id
        LEFT JOIN store_payment_tb pay ON so.order_id = pay.order_id
        LEFT JOIN store_shipping_tb ship ON so.order_id = ship.order_id
        WHERE so.user_id = #{userId}
        ORDER BY so.order_date DESC;
    </select>

    <!--  주문 단일 조회 -->
    <select id="selectOrderById" resultMap="StoreOrderMap">
        SELECT
        so.*,
        sp.product_name,
        sp.product_image_url,
        pay.payment_method,
        pay.payment_status,
        pay.amount AS payment_amount,
        ship.recipient_name,
        ship.address,
        ship.shipping_carrier,
        ship.tracking_number,
        ship.shipping_status
        FROM store_order_tb so
        JOIN store_product_tb sp ON so.product_id = sp.product_id
        LEFT JOIN store_payment_tb pay ON so.order_id = pay.order_id
        LEFT JOIN store_shipping_tb ship ON so.order_id = ship.order_id
        WHERE so.order_id = #{orderId} AND so.user_id = #{userId};
    </select>
    <!--  주문 상태 변경 -->
    <update id="updateOrderStatus">
        UPDATE store_order_tb
        SET order_status = #{status}
        WHERE order_id = #{orderId} AND user_id = #{userId}
    </update>

    <delete id="deleteStoreOrder">
        DELETE FROM store_order_tb WHERE order_id = #{orderId} AND user_id = #{userId};
    </delete>

</mapper>
